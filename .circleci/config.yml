version: 2.1

#  実行環境を定義
executors:
  default:
    docker:
      - image: circleci/node:16.13.1

# 複数のjobで使うcommandはまとめておく
commands:
  yarn_install:
    steps:
      - restore_cache:
          keys:
            - nuxt-yarn-{{ checksum "yarn.lock" }}
            - nuxt-yarn-
      - run:
          name: 'Yarn Install'
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: nuxt-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

jobs:
  test:
    executor:
      name: default
    steps:
      - checkout
      - yarn_install
      - run:
          name: 'Jestによるテスト'
          command: yarn test

  build:
    executor:
      name: default
    steps:
      - checkout
      - yarn_install
      - when:
          condition:
            equal: ['master', <<pipeline.git.branch>>]
          steps:
            - run:
                name: 'Yarn Generate'
                command: yarn generate
                environment:
                  BASE_URL: ${PROD_BASE_URL}
      - unless:
          condition:
            equal: ['master', <<pipeline.git.branch>>]
          steps:
            - run:
                name: 'delete SEO files'
                command: rm -f ./static/robots.txt ./static/sitemap.xml
            - run:
                name: 'create robots.txt'
                command: "echo 'User-agent: *\nDisallow: /\n' > ./static/robots.txt"
            - run:
                name: 'Yarn Generate'
                command: yarn generate
                environment:
                  ANALYTICS_ID: G-**********
                  BASE_URL: ${STG_BASE_URL}
                  ADSENSE_ID: 'ca-pub-#########'

      - run:
          name: 'Yarn Generate'
          command: yarn generate

      # buildで出来上がったディレクトリをデプロイのjobに渡す
      - persist_to_workspace:
          root: .
          paths:
            - .

  # Netlifyへのデプロイ
  deploy:
    executor:
      name: default
    steps:
      # buildで出来上がったディレクトリを展開
      - attach_workspace:
          at: .

      # デプロイ
      - when:
          condition:
            equal: ['master', <<pipeline.git.branch>>]
          steps:
            - run:
                name: 'Deploy Staging'
                command: ./node_modules/.bin/netlify deploy -p -d ./dist -a ${NETLIFY_AUTH_TOKEN} -s ${NETLIFY_SITE_ID}

      - when:
          condition:
            equal: ['staging', <<pipeline.git.branch>>]
          steps:
            - run:
                name: 'Deploy Staging'
                command: ./node_modules/.bin/netlify deploy -p -d ./dist -a ${NETLIFY_AUTH_TOKEN} -s ${STG_NETLIFY_SITE_ID}

workflows:
  test_build_deploy:
    jobs:
      - test
      # master or stagingブランチにpushされたときのみbuildとdeployを実行
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - staging
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - staging
# VS Code Extension Version: 1.5.1
